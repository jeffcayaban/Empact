// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArgumentEntry should render successfully 1`] = `
<tr>
  <th
    className="argumentPanelRow"
  >
    <div
      className="spaceBetweenElements"
    >
      <div>
        <div
          className="spaceBetweenElementsTwo"
        >
          <Link
            className="argumentEntryTitle"
            replace={false}
            to="/argument/testId"
          >
            The situation is true
          </Link>
          <div
            style={
              Object {
                "paddingLeft": "5px",
              }
            }
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              overlay={
                <Popover
                  bsClass="popover"
                  id="petition-creator-popover"
                  placement="right"
                >
                  By the Petition Creator
                </Popover>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="certificate"
                style={
                  Object {
                    "color": "#ebc12e",
                  }
                }
              />
            </OverlayTrigger>
          </div>
        </div>
        <div
          className="argumentEntryType"
        >
          Argument by Expert Opinion for 
          <span>
            <Link
              replace={false}
              to="/argument/testParentArgumentId"
            >
              Argument
            </Link>
          </span>
        </div>
      </div>
      <ArgCounts
        noOfAgainstArguments={0}
        noOfForArguments={0}
      />
    </div>
    <div
      className="argumentEntryFooter"
    >
      <CreatedByOn
        content={
          Object {
            "agreesWithCQ": true,
            "argumentType": "ExpertOpinion",
            "createdBy": Object {
              "authorities": Array [
                "ROLE_ADMIN",
              ],
              "firstName": "testFirstName",
              "id": "testId",
              "lastName": "testLastName",
              "username": "testUsername",
            },
            "creationDateTime": 1551716401541,
            "criticalQuestionId": "CQ1",
            "expert": "testExpert",
            "expertAssertion": "testAssertion",
            "expertDomain": "testDomain",
            "id": "testId",
            "isAnonymous": false,
            "isSupporting": true,
            "lastUpdatedDateTime": 1551716402000,
            "parentArgumentId": "testParentArgumentId",
            "rootPetitionId": "testRootPetitionId",
            "sources": Array [],
            "subCriticalQuestionId": null,
          }
        }
        date="04-03-2019"
      />
      <ShareContent
        contentId="testId"
        contentType="Argument"
      />
    </div>
  </th>
</tr>
`;

exports[`ArgumentEntry should render successfully given no parent argument 1`] = `
<tr>
  <th
    className="argumentPanelRow"
  >
    <div
      className="spaceBetweenElements"
    >
      <div>
        <div
          className="spaceBetweenElementsTwo"
        >
          <Link
            className="argumentEntryTitle"
            replace={false}
            to="/argument/testId"
          >
            The situation is true
          </Link>
          <div
            style={
              Object {
                "paddingLeft": "5px",
              }
            }
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              overlay={
                <Popover
                  bsClass="popover"
                  id="petition-creator-popover"
                  placement="right"
                >
                  By the Petition Creator
                </Popover>
              }
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="certificate"
                style={
                  Object {
                    "color": "#ebc12e",
                  }
                }
              />
            </OverlayTrigger>
          </div>
        </div>
        <div
          className="argumentEntryType"
        >
          Argument by Expert Opinion for 
          <span>
            <Link
              replace={false}
              to="/petition/testRootPetitionId"
            >
              Petition
            </Link>
          </span>
        </div>
      </div>
      <ArgCounts
        noOfAgainstArguments={0}
        noOfForArguments={0}
      />
    </div>
    <div
      className="argumentEntryFooter"
    >
      <CreatedByOn
        content={
          Object {
            "agreesWithCQ": true,
            "argumentType": "ExpertOpinion",
            "createdBy": Object {
              "authorities": Array [
                "ROLE_ADMIN",
              ],
              "firstName": "testFirstName",
              "id": "testId",
              "lastName": "testLastName",
              "username": "testUsername",
            },
            "creationDateTime": 1551716401541,
            "criticalQuestionId": "CQ1",
            "expert": "testExpert",
            "expertAssertion": "testAssertion",
            "expertDomain": "testDomain",
            "id": "testId",
            "isAnonymous": false,
            "isSupporting": true,
            "lastUpdatedDateTime": 1551716402000,
            "parentArgumentId": null,
            "rootPetitionId": "testRootPetitionId",
            "sources": Array [],
            "subCriticalQuestionId": null,
          }
        }
        date="04-03-2019"
      />
      <ShareContent
        contentId="testId"
        contentType="Argument"
      />
    </div>
  </th>
</tr>
`;
